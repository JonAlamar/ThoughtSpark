name: Terraform Apply (Manual)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type YES to confirm apply'
        required: true

jobs:
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.confirm == 'YES' }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::393800486110:role/ThoughtSpark_Terraform_Role
          aws-region: us-east-1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Build, upload, and hash all Lambda ZIPs
        run: |
          mkdir -p lambda_hashes
          for dir in lambda/*; do
            name=$(basename "$dir")
            echo "▶️ Building Lambda: $name"

            # Create build dir
            mkdir -p "build/$name"
            cp "$dir"/*.py "$dir"/requirements.txt "build/$name/"

            # Install dependencies and package
            cd "build/$name"
            pip install -r requirements.txt -t .
            zip -r "../../${name}.zip" .
            cd ../..

            # Upload to S3
            aws s3 cp "${name}.zip" "s3://thoughtspark-lambda-code/thoughtspark/${name}.zip"

            # Calculate hash
            HASH=$(openssl dgst -sha256 -binary "${name}.zip" | base64)
            echo "$HASH" > "lambda_hashes/${name}.hash"
            echo "✅ $name hash: $HASH"
          done

      - name: Export Lambda Hashes
        id: lambdahashes
        run: |
          echo "query=$(cat lambda_hashes/query_handler.hash)" >> $GITHUB_OUTPUT
          echo "log=$(cat lambda_hashes/log_handler.hash)" >> $GITHUB_OUTPUT

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra

      - name: Terraform Apply
        env:
          TF_VAR_lambda_s3_bucket: thoughtspark-lambda-code
          TF_VAR_query_lambda_s3_key: thoughtspark/query_handler.zip
          TF_VAR_query_lambda_source_hash: ${{ steps.lambdahashes.outputs.query }}
          TF_VAR_log_lambda_s3_key: thoughtspark/log_handler.zip
          TF_VAR_log_lambda_source_hash: ${{ steps.lambdahashes.outputs.log }}
        run: terraform apply -auto-approve
        working-directory: ./infra
